#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue May 11 21:46:20 2021

@author: yulong

下記の問題をプログラミングしてみよう！
盤面と石を置くマスについての情報が与えられます。
初め、プレイヤーの石が置かれているマスは ＊ になっており、何も置かれていないマスは . になっています。
プレイヤーは次の操作を１回だけおこないます。

・ 盤面の ( Y , X ) に石を置き、縦横斜めに自分の石ではさんだマスの間に自分の石をおきます。
新たに置いた石によってさらに石が置けるようになった場合でもその時点で操作を終える。

なお、マスの座標系は左上端のマスの座標を ( y , x ) = ( 0 , 0 ) とし、
下方向が y 座標の正の向き、右方向が x 座標の正の向きとします。
例として、図１のような盤面のとき赤いマスに石を置くと図２のようになります。


図１

図２

操作を終えた後の盤面を出力してください。

入力される値
H W Y X         
S_0             
...     
S_(H-1)


・ １行目では、盤面の行数 H ,列数 W , 石を置くマスの y , x 座標 である Y , X が与えられます。
・ 続く H 行のうち i 行目 (0 ≦ i < H) には、盤面の i 行目の文字をまとめた文字列 S_i が与えられ、 S_i の j 文字目は、盤面の i 行目の j 列目に書かれている文字を表します。

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
H 行での出力

条件
すべてのテストケースにおいて、以下の条件をみたします。

・ 1 ≦ H, W ≦ 20
・ 0 ≦ Y < H, 0 ≦ X < W
・ S は W 文字の文字列
・ S の各文字は '.' または '*'
・ S[ Y ][ X ] = '.'

入力例1
3 3 0 0
..*
...
*.*

出力例1
***
**.
*.*

入力例2
5 5 2 2
*.*.*
.....
*...*
.....
*.*.*

出力例2
*.*.*
.***.
*****
.***.
*.*.*
"""

h,w,y,x=map(int,input().split())
s=[list(input()) for _ in range(h)]
for sy in range(h):
    for sx in range(w):
        if sy==y or sx==x:
            s[sy][sx]="*"
        elif abs(sy-y)==abs(sx-x) and s[sy][sx]==".":
            s[sy][sx]="*"
for sy in range(h):
    print("".join(s[sy]))
            